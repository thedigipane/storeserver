{"version":3,"sources":["Demo/UIElements/Basic/datagrid.js"],"names":["style","width","background","marginLeft","minHeight","zIndex","DataGrid","state","search","items","isLoading","check","HandleInput","e","target","value","setState","name","length","Axios","get","Config","prod","params","token","loadUserToken","then","data","catch","error","createNotification","searchOnHandler","alert","searchOffHandler","renderByCheckId","this","className","id","height","type","placeholder","onChange","href","DEMO","BLANK_LINK","onClick","fontSize","noGutters","htmlFor","map","item","index","key","borderRadius","alt","src","images","componentid","mfgmodelnumber","sizes","Body","taxonomy","elastomers","stockroomlabel","Component","windowSize"],"mappings":"+SASIA,EAAQ,CACRC,MAAO,OACPC,WAAY,OACZC,WAAY,MACZC,UAAW,MACXC,OAAQ,GAENC,E,4MACFC,MAAQ,CACJC,OAAQ,GACRC,MAAO,GACPC,WAAW,EACXC,OAAO,G,EAEXC,YAAc,SAACC,GACX,IAAIL,EAASK,EAAEC,OAAOC,MACdJ,EAAU,EAAKJ,MAAfI,MACR,EAAKK,SAAS,CACV,CAACH,EAAEC,OAAOG,MAAOT,IAGjBA,EAAOU,OAAS,GAEhBC,IAAMC,IAAN,UAAaC,IAAOC,KAApB,0BAA0CX,EAAQH,EAAH,mBAAwBA,IAAY,CAC/Ee,OAAQ,CACJC,MAAOC,iBAEZC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEP,EAAKX,SAAS,CAAEP,MAAOkB,OACxBC,OAAM,SAAAC,GACLC,6BAAmB,QAAS,0B,EAIxCC,gBAAkB,WAAO,IACbvB,EAAW,EAAKD,MAAhBC,OACO,KAAXA,GACAwB,MAAM,aAAexB,I,EAI7ByB,iBAAmB,WACf,EAAKjB,SAAS,CAAER,OAAQ,M,EAE5B0B,gBAAkB,SAACvB,GACf,EAAKK,SAAS,CAAER,OAAQ,GAAIC,MAAO,GAAIE,OAAQA,K,uDAEzC,IAAD,SACoBwB,KAAK5B,MAAtBE,EADH,EACGA,MAAOE,EADV,EACUA,MACf,OACI,kBAAC,IAAD,KACI,yBAAKyB,UAAU,gBAAgBpC,MAAOA,GAClC,yBAAKqC,GAAG,cAAcD,UAAU,+BAC5B,yBAAKA,UAAU,cAAcpC,MAAO,CAACsC,OAAO,SACxC,2BAAOC,KAAM5B,EAAQ,SAAW,OAC5B0B,GAAG,WACHD,UAAU,eACVI,YAAY,eACZvB,KAAK,SACLF,MAAOoB,KAAK5B,MAAMC,OAClBiC,SAAU,SAAC5B,GAAD,OAAO,EAAKD,YAAYC,MAEtC,uBAAG6B,KAAMC,IAAKC,WAAYR,UAAU,kCAAkCS,QAAS,kBAAM,EAAKZ,qBACtF,uBAAGG,UAAU,kCAAkCpC,MAAO,CAAC8C,SAAS,cAQhF,kBAAC,IAAD,CAAKC,WAAS,GACV,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM9B,KAAK,YACP,yBAAKmB,UAAU,8BACX,yBAAKA,UAAU,mCACX,2BAAOG,KAAK,WAAWtB,KAAK,kBAAkBoB,GAAG,mBAAmBQ,QAAS,kBAAM,EAAKX,gBAAgBvB,MACxG,2BAAOqC,QAAQ,mBAAmBZ,UAAU,MAA5C,qBAMpB,kBAAC,IAAD,KAEQ3B,EAAMwC,KAAI,SAACC,EAAMC,GAAP,OACN,kBAAC,IAAD,CAAKf,UAAU,iCAAiCgB,IAAKD,GACjD,kBAAC,IAAD,CAAMnD,MAAO,CAAEqD,aAAc,QACzB,kBAAC,IAAD,CAAKjB,UAAU,WAAWW,WAAS,GAC/B,kBAAC,IAAD,CAAKX,UAAU,aAEPzB,EAAQ,yBAAK2C,IAAI,YAAYC,IAAKL,EAAKM,OAASN,EAAKM,OAAO,GAAK,GAAIpB,UAAU,cAAiB,yBAAKkB,IAAI,aAAaC,IAAKL,EAAKM,OAAO,GAAIpB,UAAU,eAG7J,kBAAC,IAAD,CAAKA,UAAU,8BACX,4BAAI,mCAAoBc,EAAKO,aAC7B,4BAAI,sCAAJ,IAA4BP,EAAKQ,gBACjC,4BAAI,sCAAuBR,EAAKS,SAGxC,kBAAC,IAAKC,KAAN,KACI,6BAEI,4BAAI,yCAAJ,IAA+BV,EAAKW,UACpC,4BACI,2CAA4BX,EAAKY,YAErC,4BAAI,+CAAgCZ,EAAKa,6B,GArG9DC,aAkHRC,cAAW3D","file":"static/js/26.7dbfde51.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Card, Form } from 'react-bootstrap';\r\nimport DEMO from '../../../store/constant';\r\nimport windowSize from 'react-window-size';\r\nimport Config from '../../../config';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Axios from 'axios';\r\nimport { loadUserToken } from '../../../store/actions/authactions';\r\nimport { createNotification } from '../../../index';\r\nlet style = {\r\n    width: \"100%\",\r\n    background: 'none',\r\n    marginLeft: '0px',\r\n    minHeight: '0px',\r\n    zIndex: 0\r\n}\r\nclass DataGrid extends Component {\r\n    state = {\r\n        search: '',\r\n        items: [],\r\n        isLoading: false,\r\n        check: false\r\n    };\r\n    HandleInput = (e) => {\r\n        let search = e.target.value;\r\n        const { check } = this.state;\r\n        this.setState({\r\n            [e.target.name]: search\r\n        })\r\n\r\n        if (search.length > 2) {\r\n\r\n            Axios.get(`${Config.prod}/api/component/${check ? search : `search?q=${search}`}`, {\r\n                params: {\r\n                    token: loadUserToken()\r\n                }\r\n            }).then(({ data }) => {\r\n                // console.log(data);\r\n                this.setState({ items: data })\r\n            }).catch(error => {\r\n                createNotification('error', 'Please Login Again')\r\n            })\r\n        }\r\n    }\r\n    searchOnHandler = () => {\r\n        const { search } = this.state;\r\n        if (search !== '') {\r\n            alert('You Enter ' + search);\r\n        }\r\n    }\r\n\r\n    searchOffHandler = () => {\r\n        this.setState({ search: '' })\r\n    }\r\n    renderByCheckId = (check) => {\r\n        this.setState({ search: '', items: [], check: !check })\r\n    }\r\n    render() {\r\n        const { items, check } = this.state;\r\n        return (\r\n            <Aux>\r\n                <div className=\"pcoded-header\" style={style}>\r\n                    <div id=\"main-search\" className=\"main-search open ml-0 w-100\">\r\n                        <div className=\"input-group\" style={{height:'50px'}}>\r\n                            <input type={check ? 'number' : 'text'}\r\n                                id=\"m-search\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Search . . .\"\r\n                                name=\"search\"\r\n                                value={this.state.search}\r\n                                onChange={(e) => this.HandleInput(e)}\r\n                            />\r\n                            <a href={DEMO.BLANK_LINK} className=\"input-group-append search-close\" onClick={() => this.searchOffHandler()}>\r\n                                <i className=\"feather icon-x input-group-text\" style={{fontSize:'22px'}} />\r\n                            </a>\r\n                            {/* <span className=\"input-group-append search-btn btn btn-primary\" onClick={this.searchOnHandler}>\r\n                                <i className=\"feather icon-search input-group-text\" />\r\n                            </span> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Row noGutters>\r\n                    <Col>\r\n                        <Form name=\"datagrid\">\r\n                            <div className=\"form-group text-right mt-2\">\r\n                                <div className=\"checkbox checkbox-fill d-inline\" >\r\n                                    <input type=\"checkbox\" name=\"checkbox-fill-1\" id=\"checkbox-fill-a1\" onClick={() => this.renderByCheckId(check)} />\r\n                                    <label htmlFor=\"checkbox-fill-a1\" className=\"cr\">Search By Id</label>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    {\r\n                        items.map((item, index) => (\r\n                            <Col className=\"col-12 col-sm-6 col-lg-4  mb-2\" key={index}>\r\n                                <Card style={{ borderRadius: '5px' }}  >\r\n                                    <Row className=\"p-2 pt-3\" noGutters>\r\n                                        <Col className=\"col-5 p-2\">\r\n                                            {\r\n                                                check ? <img alt=\"not-found\" src={item.images ? item.images[0] : ''} className=\"img-fluid\" /> : <img alt=\"not-forund\" src={item.images[0]} className=\"img-fluid\" />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col className=\"col-7 pt-3 text-right pr-3\">\r\n                                            <h6><b>ID: </b>{check ? item.componentid : item.componentid}</h6>\r\n                                            <h6><b>Model: </b> {check ? item.mfgmodelnumber : item.mfgmodelnumber}</h6>\r\n                                            <h6><b>Sizes: </b>{check ? item.sizes : item.sizes}</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Card.Body>\r\n                                        <div>\r\n\r\n                                            <h6><b>Taxonomy: </b> {check ? item.taxonomy : item.taxonomy}</h6>\r\n                                            <h6>\r\n                                                <b>Elastomers: </b>{check ? item.elastomers : item.elastomers}\r\n                                            </h6>\r\n                                            <h6><b>Stockroomlabel: </b>{check ? item.stockroomlabel : item.stockroomlabel}</h6>\r\n                                        </div>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(DataGrid);\r\n"],"sourceRoot":""}